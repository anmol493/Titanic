# -*- coding: utf-8 -*-
"""titanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YXX1vxcEZ2N01jKVJIW4S5Jsv7djrvhD
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

df_train=pd.read_csv('train.csv')
df_test=pd.read_csv('train.csv')

df_train.describe()

df_train.isna().sum()

df_train.info()

df_train.head(4)

df_train[df_train.Embarked.isna()]

df_train[df_train.Age.isna()]

df_train=df_train.drop(['Cabin'],axis=1)
df_test=df_test.drop(['Cabin'],axis=1)

df_train.head()

df_train.head()

sns.catplot(x='Sex',col='Survived',kind='count',data=df_train)

sns.catplot('Sex','Survived',kind='point',data=df_train)

?sns.catplot

sns.catplot(x='Pclass',y='Survived',hue='Sex',kind='point',data=df_train)

sns.catplot(x='Sex',col='Survived',row='Embarked',kind='count',data=df_train)

df_train[(df_train['Sex']=='male') & (df_train['Embarked']=='C') & (df_train['Survived']==1)].count()/df_train[(df_train['Sex']=='male') & (df_train['Embarked']=='C')].count()

def func(dataset,attr1,attr2,attr3,res1,res2,res3):
    print(dataset[attr1][(dataset[attr1]==res1) & (dataset[attr2]==res2) & (dataset[attr3]==res3)].count()/dataset[attr1][(dataset[attr1]==res1) & (dataset[attr2]==res2)].count())

func(df_train,'Sex','Embarked','Survived','male','C',1)

func(df_train,'Sex','Embarked','Survived','female','Q',1)

sns.distplot(df_train.Age.dropna(),norm_hist=True)

g=sns.FacetGrid(data=df_train,col='Survived')
g.map(plt.hist,'Age')

g=sns.FacetGrid(data=df_train,col='Survived',hue='Sex')
g.map(plt.hist,'Age')
g.add_legend()

g=sns.FacetGrid(df_train,hue='Survived',col='Sex')
g.map(plt.hist,'Fare')
g.add_legend()

dataset=pd.concat([df_train,df_test])

dataset.head()

dataset=pd.merge(df_train,df_test,how='left')



df_train=df_train.drop(['PassengerId','Name','Ticket'],axis=1)
df_test=df_test.drop(['PassengerId','Name','Ticket'],axis=1)

df_train.head()

df_train['Sex']=df_train['Sex'].map({'female':0,'male':1}).astype(int)
df_test['Sex']=df_test['Sex'].map({'female':0,'male':1}).astype(int)

df_train.head()

df_train['Embarked']=df_train['Embarked'].map({'S':0,'C':1,'Q':2}).astype(int)
df_test['Embarked']=df_test['Embarked'].map({'S':0,'C':1,'Q':2}).astype(int)

df_train.head()

df_train.head()

sns.countplot(dataset.Embarked)

df_train['Embarked']=df_train['Embarked'].map({'S':0,'C':1,'Q':2}).astype(int)

df_train['Embarked']=df_train['Embarked'].fillna('S')
df_test['Embarked']=df_test['Embarked'].fillna('S')

df_train.Age=df_train.Age.fillna(df_train['Age'].mean())
df_test.Age=df_test.Age.fillna(df_test['Age'].mean())

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression()
classifier.fit(X_train,y_train)

y_pred=classifier.predict(X_test)

y_pred

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,y_pred)

?confusion_matrix

cm

from sklearn.metrics import cross_val_score,f1_score
acc=cross_val_score(estimator=classifier,x=X_train,y=y_train)

141/178

?train_test_split

df_train.head()

X=df_train.iloc[:,1:8].values
y=df_train.iloc[:,0].values



dataset.tail()